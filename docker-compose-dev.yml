name: playtime-service-dev

services:
  playtime:
    build: ./playtime_service/
    command: "sh -c 'pip3 install debugpy -t /tmp && python3 manage.py migrate --noinput && python3 /tmp/debugpy --wait-for-client --listen 0.0.0.0:5678 manage.py runserver 0.0.0.0:8000 --insecure'"
    ports:
      - "8000:8000"
      - "5678:5678"
    develop:
      watch:
        - path: ./playtime_service
          target: /app
          action: sync
    volumes:
      - static:/app/static
    depends_on:
      db:
        # ждём запуска бд
        condition: service_healthy
    restart: always
    networks:
      - only-lan-network
      - to-wan-network
    configs:
      - source: playtime
        target: /app/config.toml
    env_file:
      - ./configs/postgres/postgres.env
  db:
    image: postgres:17-bookworm
    volumes:
      - database:/var/lib/postgresql/data
    # Для того, чтобы не добавлять sleep или wait-for-it в сервис playtime для ожидания полноценного запуска бд
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - only-lan-network
    env_file:
      - ./configs/postgres/postgres.env

volumes:
  database:
  static:

networks:
  to-wan-network:
  only-lan-network:

configs:
  playtime:
    file: ./configs/playtime/config.toml
  nginx:
    file: ./configs/nginx/default.conf

